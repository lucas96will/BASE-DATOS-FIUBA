6. (Ejercicios) Resuelva en clase utilizando la base de datos de IMDB las siguientes consultas:
a) Mostrar los actores cuyo nombre sea Brad.
b) Mostrar el nombre y apellido de directores catalogados cono de ’Sci-Fi’ (ciencia ficci´on)
con una probabilidad mayor igual a 0.5.
c) Mostrar los nombres de las pel´ıculas filmadas por James(I) Cameron que figuren en la
base.
d) Mostrar los nombres y apellidos de las actrices que trabajaron en la pel´ıcula ’Judgment
at Nuremberg’
e) Muestre los actores que trabajaron en todas las pel´ıculas de Woody Allen de la base.
Cuantas pel´ıculas de este director hay en la base?
f ) Directores que abarcaron, al menos, los mismos g´eneros que Welles (g´eneros en directores).
g) Actores que filmaron m´as de una pel´ıcula en alg´un a˜no a partir de 1999
h) Listar las pel´ıculas del ´ultimo a˜no.
i) Pel´ıculas del director Spielberg en las que actu´o Harrison (I) Ford.
j) Pel´ıculas del director Spielberg en las que no actu´o Harrison (I) Ford.
k) Pel´ıculas en las que actu´o Harrison (I) Ford que no dirigi´o Spielberg.
l) Directores que filmaron pel´ıculas de m´as de tres g´eneros distintos, uno de los cuales sea
’Film-Noir’.

a) σactors.first_name = 'Brad'(actors)
b)
DIRECTORES_SCI_FI_PROB = πdirector_id σ(directors_genres.genre =  'Sci-Fi' ∧ directors_genres.prob > 0.5)(directors_genres)

DIRECTORES_CUMPLEN = (directors)⨝directors.id = directors_genres.director_id (DIRECTORES_SCI_FI_PROB)

πfirst_name,last_name(DIRECTORES_CUMPLEN)
c)
DIRECTOR_JAMES = σdirectors.first_name = 'James (I)' ∧ directors.last_name = 'Cameron' (directors)
PELIS_DIRECTOR = (movies_directors)⨝movies_directors.director_id = directors.id (DIRECTOR_JAMES)
PELICULAS_JAMES = (movies)⨝movies.id = movies_directors.movie_id (PELIS_DIRECTOR)
πname(PELICULAS_JAMES)

d)
ID_PELI = πidσname = 'Judgment at Nuremberg'(movies)
ROLES_PELI = roles⨝movies.id = roles.movie_id (ID_PELI)
ACTORES_ID_PELI = πactor_id(ROLES_PELI)
ACTORES = actors⨝actors.id = roles.actor_id (ACTORES_ID_PELI)
πfirst_name,last_name ACTORES

e)
WOODY = σfirst_name = 'Woody' ∧ last_name = 'Allen'(directors)
PELI_DIRECTOR = WOODY⨝movies_directors.director_id = directors.id (movies_directors)
PELIS = movies⨝movies.id = movies_directors.movie_id (PELI_DIRECTOR)
πname PELIS

f)
DIRECTOR = σlast_name = 'Welles' directors
DIRECTOR_PELI = directors_genres⨝directors_genres.director_id = directors.id (DIRECTOR)
GENEROS_WELLES = πgenre DIRECTOR_PELI
TODAS_PELICULAS_DIRECTOR_GENERO = πdirector_id,genre directors_genres
DIRECTORES_CUMPLEN_ID = TODAS_PELICULAS_DIRECTOR_GENERO ÷ GENEROS_WELLES
DIRECTORES = directors⨝directors_genres.director_id = directors.id (DIRECTORES_CUMPLEN_ID)
πfirst_name,last_name DIRECTORES

g)
MOVIES_AFTER_YEAR = π id σ year ≥ 1999 movies
ROLES_IN_MOVIES = π actor_id, movie_id roles ⨝ roles.movie_id = movies.id MOVIES_AFTER_YEAR
ROLES_IN_MOVIES_2 = ρ roles_2 ROLES_IN_MOVIES
ACTOR_MORE_THAN_ONE_MOVIE = π roles.actor_id (ROLES_IN_MOVIES ⨝ roles.actor_id = roles_2.actor_id ∧ roles.movie_id ≠ roles_2.movie_id ROLES_IN_MOVIES_2)
RESULT_ACTORS_NAMES = π first_name, last_name (actors ⨝ actors.id = roles.actor_id ACTOR_MORE_THAN_ONE_MOVIE)
RESULT_ACTORS_NAMES

h)
todosLosAniosMenosElMayor = σ movies.year < otherMovies.year ((movies) x (ρ otherMovies(movies)))
ultimoAnio = π movies.year (movies) - π movies.year todosLosAniosMenosElMayor
peliculasDelUltimoAnio = σ movies.year = ultimoAnio.year (movies x (ρ ultimoAnio ultimoAnio))
idsDeLasPeliculasDelUltimoAnio = π movies.id peliculasDelUltimoAnio

i)
id_spil = π id σ directors.first_name = 'Steven' and last_name = 'Spielberg' (directors)
peliculas_spil = π movie_id (movies_directors ⨝ directors.id = movies_directors.director_id id_spil)
h_ford_id = π actors.id σ actors.first_name = 'Harrison (I)' and actors.last_name = 'Ford' actors
id_peliculas_filtradas = (roles ⨝ roles.movie_id = movie_id peliculas_spil) ⨝ actors.id = actor_id h_ford_id
π movies.name ((π roles.movie_id id_peliculas_filtradas) ⨝ roles.movie_id = movies.id movies)

j)
id_spil = π id σ directors.first_name = 'Steven' and last_name = 'Spielberg' (directors)
peliculas_spil = π movie_id (movies_directors ⨝ directors.id = movies_directors.director_id id_spil)
h_ford_id = π actors.id σ actors.first_name = 'Harrison (I)' and actors.last_name = 'Ford' actors
id_peliculas_filtradas = (roles ⨝ roles.movie_id = movie_id peliculas_spil) ⨝ actors.id ≠ actor_id h_ford_id

π movies.name ((π roles.movie_id id_peliculas_filtradas) ⨝ roles.movie_id = movies.id movies)


k)
ID_FORD = πid(σ(last_name='Ford' ∧ first_name='Harrison (I)')(actors))
ID_SPIELBERG = πid(σ(last_name='Spielberg' ∧ first_name='Steven')(directors))
ID_PELIS_SPIELBERG = πmovie_id(ID_SPIELBERG ⨝ (directors.id = movies_directors.director_id) movies_directors)
ROLES_NO_SPIELBERG = roles ⨝ (roles.movie_id ≠ movies_directors.movie_id) ID_PELIS_SPIELBERG
PELIS_NO_SPIL_HARR = πroles.movie_id(ROLES_NO_SPIELBERG ⨝ (roles.actor_id = actors.id) ID_FORD)
πname(PELIS_NO_SPIL_HARR ⨝ (roles.movie_id = movies.id) movies)

l)
M1 = ρ M1(directors_genres)
M2 = ρ M2(directors_genres)
M3 = ρ M3(σgenre='Film-Noir'(directors_genres))
M = σ(M1.director_id = M2.director_id ∧ M1.genre≠M2.genre) (M1⨯M2)
J = σ(M3.director_id = M1.director_id ∧ M3.genre≠M2.genre ∧ M3.genre≠M1.genre) (M3⨯M)
IDS_DIRECTORES = πM3.director_id(J)
πfirst_name,last_name(IDS_DIRECTORES⨝(M3.director_id = directors.id) directors)
